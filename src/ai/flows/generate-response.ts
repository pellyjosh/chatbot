// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview This file defines a Genkit flow for generating chatbot responses.
 *
 * The flow takes user input and conversation history as input, and returns an AI-generated response.
 *
 * @exports {
 *   generateResponse: function - The main function to generate a response.
 *   GenerateResponseInput: type - The input type for the generateResponse function.
 *   GenerateResponseOutput: type - The output type for the generateResponse function.
 * }
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const GenerateResponseInputSchema = z.object({
  userInput: z.string().describe('The user input message.'),
  conversationHistory: z.array(z.object({
    role: z.enum(['user', 'assistant']),
    content: z.string(),
  })).optional().describe('The conversation history.'),
});

export type GenerateResponseInput = z.infer<typeof GenerateResponseInputSchema>;

const GenerateResponseOutputSchema = z.object({
  response: z.string().describe('The AI-generated response.'),
});

export type GenerateResponseOutput = z.infer<typeof GenerateResponseOutputSchema>;

export async function generateResponse(input: GenerateResponseInput): Promise<GenerateResponseOutput> {
  return generateResponseFlow(input);
}

const generateResponsePrompt = ai.definePrompt({
  name: 'generateResponsePrompt',
  input: {
    schema: z.object({
      userInput: z.string().describe('The user input message.'),
      conversationHistory: z.array(z.object({
        role: z.enum(['user', 'assistant']),
        content: z.string(),
      })).optional().describe('The conversation history.'),
    }),
  },
  output: {
    schema: z.object({
      response: z.string().describe('The AI-generated response.'),
    }),
  },
  prompt: `You are a helpful chatbot. Respond to the user input based on the conversation history.

Conversation History:
{{#each conversationHistory}}
{{this.role}}: {{this.content}}
{{/each}}

User Input: {{{userInput}}}

Response: `,
});

const generateResponseFlow = ai.defineFlow<
  typeof GenerateResponseInputSchema,
  typeof GenerateResponseOutputSchema
>({
  name: 'generateResponseFlow',
  inputSchema: GenerateResponseInputSchema,
  outputSchema: GenerateResponseOutputSchema,
}, async input => {
  const {output} = await generateResponsePrompt(input);
  return output!;
});
